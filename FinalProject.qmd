---
title: "Final Project"
author: "Adriana Vance, Kyle Kim, Elena Koshkin, Kamiryn Rose"
format: html
editor: visual
---


```{r echo = false, message=FALSE, warning=FALSE}

library(httr)
library(jsonlite)
library(tidyverse)
library(tidycensus)
library(purrr)
library(sf)
library(dplyr)


#Read in CSV of CDC data
Health <- read_csv("PLACES.csv")

# Look at types of health outcome measures
Measures <- Health %>%
  group_by(Measure) %>%
  summarize(n = n())

MeasureIDs <- Health %>%
  group_by(MeasureId) %>%
  summarize(n = n())

# We want to look for current rates of asthma, heart disease, diabetes, stroke, and depression
Health <- Health %>%
  filter(
    MeasureId == "CASTHMA" |
      MeasureId == "CHD" |
      MeasureId == "DIABETES" |
      MeasureId == "STROKE" |
      MeasureId == "DEPRESSION")


library(tigris) 

Maryland_tracts <- tracts(
  state = "MD",
  county = c("Montgomery", "Prince George's"),
  cb = FALSE,
  resolution = "500k",
  year = 2010)

Virginia_tracts <- tracts(
  state = "VA",
  county = "Fairfax County",
  resolution = "500k", 
  year = 2010
)

DC_tracts <- tracts(
  state = "DC",
  resolution = "500k",
  year = 2010
)

DMV_tracts<- rbind_tigris(DC_tracts, Virginia_tracts, Maryland_tracts)



# loading debt to income ratio data

debt_to_income <- read.table("debt_to_income.txt", header = FALSE)


# Have to manually name columns (will filter to only useful columns later)

colnames(debt_to_income) <- c('enterprise', 'record_num','state_postal_code', 'MSA', 'COUNTYFP', 'NAME10', 'percent_minority', 'median_income', 'MSA_median_income', 'tract_income_ratio', 'borrower_income','AMI', 'borrower_income_ratio', 'UPB','purpose_of_loan', 'fed_guarantee', 'num_borrowers', 'first_time_borrower', 'borrower_race_1', 'race_2', 'race_3', 'race_4', 'race_5', 'borrower_ethnicity', 'co-borrower_race_1', 'co-race_2', 'co-race_3', 'co-race_4', 'co-race_5',   'co-borrower_ethnicity', 'borrower_gender', 'co-borrower_gender', 'borrower_age', 'co-borrower_age', 'occupancy_code', 'rate_spread', 'HOEPA_status', 'property_type', 'lien_status', 'borrower_over_sixtytwo', 'co-borrower_over_sixtytwo', 'LTV_ratio', 'note_date', 'mortgage_term', 'num_units', 'interest_rate', 'note_amount', 'preapproval', 'application_channel', 'AUS_name', 'borrower_credscore_model', 'co-borrower_credscore_model', 'DTI_ratio', 'discount_points', 'rate_period', 'manufactured_home_ownership', 'property_value', 'rural_tract', 'lower_MS_delta', 'Mid_Appalachia', 'persistent_poverty_county', 'concentrated_poverty', 'high_opportunity_area', 'QOZ')

counties <- c(1, 59, 31, 33) # Name county vector to filter dataset to needed counties only 

library(dplyr)
debt_to_income <- debt_to_income %>%
  filter(MSA == 47900) 

debt_to_income <- debt_to_income %>%
  filter(COUNTYFP == counties) # Filtering to needed counties 

# Mutate dataset to match county names of TIGRIS shapefile
debt_to_income <- debt_to_income %>%
  mutate(COUNTYFP = 
           if_else(COUNTYFP == 1, "001", as.character(COUNTYFP)))

debt_to_income <- debt_to_income %>%
  mutate(COUNTYFP = 
           if_else(COUNTYFP == 59, "059", as.character(COUNTYFP)))

debt_to_income <- debt_to_income %>%
  mutate(COUNTYFP = 
           if_else(COUNTYFP == 31, "031", as.character(COUNTYFP)))

debt_to_income <- debt_to_income %>%
  mutate(COUNTYFP = 
           if_else(COUNTYFP == 33, "033", as.character(COUNTYFP)))

debt_to_income$NAME10 <- as.numeric(debt_to_income$NAME10)

DMV_tracts$NAME10 <- as.numeric(DMV_tracts$NAME10)

debt_to_income$NAME10 <- debt_to_income$NAME10 / 100

#Merging the datasets by census tract name
debt_tract_2 <- full_join(DMV_tracts, debt_to_income, by = "NAME10")

debt_tract_2 %>%
  ggplot() + 
  geom_sf()

#Merging health dataset with debt_tract_2 

install.packages("sf")

library(sf)

#Converting long and lat coordinates to sf objects
debt_tract_2_sf <- st_as_sf(debt_tract_2, coords = c("INTPTLON10", "INTPTLAT10"), crs = 4326)

# Convert 'Geolocation' column to an sf object
Health_sf <- st_as_sf(Health, wkt = "Geolocation", crs = 4326)

#Confirm if health and debt use the same coordinate reference systems (crs) 
#They do not. 
st_crs(debt_tract_2_sf)
st_crs(Health_sf)

#Spatial Join
joined_health_debt_tract <- st_join(debt_tract_2_sf, Health_sf, join = st_intersects)

#Extracting csv
write.csv(as.data.frame(joined_health_debt_tract), "joined_health_debt_tract.csv")












